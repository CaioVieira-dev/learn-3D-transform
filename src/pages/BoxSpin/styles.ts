import styled, { keyframes } from "styled-components";

/**
    How to make a cube spin with animation

    Pattern: 
        scene, object, faces

    Structure used: 
        <Scene>
            <Box>
                <BoxFace></BoxFace>
                <BoxFace></BoxFace>
                <BoxFace></BoxFace>
                <BoxFace></BoxFace>
                <BoxFace></BoxFace>
                <BoxFace></BoxFace>
            </Box>
        </Scene>
    
    Steps:
        1 - Create a Scene element with the perspective
        2 - Create a Box element with position relative and
                transform-style preserve-3d
        3 - Create six BoxFace elements with position absolute
        4 - Identify each of the six BoxFace elements
        5 - Set each face size (width and height)
        Important - Now all faces are on top left corner of Box element.
                    In order to facilitate the construction of the box,
                    you need to set the left property of Left and Right 
                    faces, and top property of Top and Bottom faces.
                    You must center all faces.
        6 - Use transform rotate to set the faces to their 
                correct positions
        7 - Use translate Z position each face.
        Remember that the box may not be a cube, so each pair
            of faces may differ in distance.
        Important: The order of the functions matter.
        8 - Use translate Z with negative half of the box 
                depth on the Box itself. This will correct
                the pixel distortion that was generated by
                translating the faces
        9 - Create an animation by transforming the cube
                Ex: rotateX(90deg) will show the box's bottom face
        Remember to maintain the translate Z value while rotating
        10 - Apply the animation on the Box

*/

const spin = keyframes`
0%,100%{
    transform: translateZ(-50px) rotateY(   0deg); 
}
16%{
    transform: translateZ(-50px) rotateY( -90deg);
}
32%{
    transform: translateZ(-50px) rotateY(-180deg);
}
48%{
    transform: translateZ(-50px) rotateY(  90deg);
}
64%{
    transform: translateZ(-50px) rotateX( -90deg);
}
80%{
    transform: translateZ(-50px) rotateX(  90deg);
}

`
export const Scene = styled.div`
  width: 300px;
  height: 200px;
  perspective: 400px;
`
export const Box = styled.div`
    width: 300px;
    height: 200px;
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(-50px);
    animation: ${spin} 7s ease-in-out infinite;
    `
export const BoxFace = styled.div`
position: absolute;
opacity: 0.7;
text-align: center;
font-size: 24px;
color:white;
.Front&,.Back&{
width: 300px;
height: 200px;
line-height: 200px;
}
.Left&,.Right&{
    width: 100px;
    height: 200px;
    left:100px;
    line-height:200px;
}
.Top&,.Bottom&{
    width: 300px;
    height: 100px;
    top: 50px;
    line-height:100px;
}
.Front&{ 
    transform: rotateY(  0deg) translateZ( 50px);
    background-color:red;
}
.Back&{ 
    transform: rotateY(  180deg) translateZ( 50px);
    background-color:green;
 }
.Right&{ transform: rotateY(  90deg) translateZ( 150px);
    background-color:purple;
 }
.Left&{ transform: rotateY(  -90deg) translateZ( 150px); 
    background-color:turquoise;
}
.Top&{ transform: rotateX(  90deg) translateZ( 100px);
    background-color:orange;
 }
.Bottom&{ transform: rotateX(  -90deg) translateZ( 100px);
    background-color:palevioletred;
 }


`
export const Container = styled.div`
max-width: 420px;
display: flex;
flex-direction:column;
align-items: center;
gap:30px;
`

export const Text = styled.p`
color:white;
font-size: 20px;
line-height:1.5em;
:last-child&{
margin-bottom:16px;
}
`
export const Title = styled.h2`
color:white;
margin-top: 70px;

`